# vim: foldmethod=expr

set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.local/share/tmux/plugins/'
if "test ! -d ~/.local/share/tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.local/share/tmux/plugins/tpm && ~/.local/share/tmux/plugins/tpm/bin/install_plugins'"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'sainnhe/tmux-fzf'
TMUX_FZF_ORDER="session|window|pane|command|keybinding|clipboard|process"
set -g @continuum-restore 'on'

# prefix + I
# * Installs new plugins from GitHub or any other git repository
# * Refreshes TMUX environment

# prefix + U
# * updates plugin(s)

# prefix + alt + u
# * remove/uninstall plugins not on the plugin list

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# allow terminal scrolling
set-option -g terminal-overrides 'xterm*:smcup@:rmcup@'

# true colors
# ENABLE 24 BIT TRUE COLORS
#     - Put this in your ~/.tmux.conf and replace XXX by your $TERM outside of tmux:
#       set-option -sa terminal-features 'XXX,:RGB'
set-option -sa terminal-features ',xterm-kitty:RGB'
# set-option -sa terminal-features ',alacritty:RGB'

set-option -sg escape-time 10

# When focus-events is enabled:
#
# - Clicking on a tmux pane will bring focus to that pane, allowing you to type into it directly
# - Clicking on a tmux window will bring that window into focus 
# - The focused pane or window will be highlighted visually
#
# With focus-events disabled, clicking with your mouse won't change focus in tmux.
# It will also produce warning in neovim checkhealt.
set-option -g focus-events on

set-option -g set-titles on
# set-option -g set-titles-string '#{pane_title}'
set-option -g set-titles-string "tmux: #I°#W           session: #S"

# renumber windows after closing
set -g renumber-windows off

# KEYBINDINGS
#############
bind -T copy-mode-vi / command-prompt -i -p "search down" "send -X search-forward-incremental \"%%%\""
bind -T copy-mode-vi ? command-prompt -i -p "search up" "send -X search-backward-incremental \"%%%\""

bind -n C-f copy-mode \; command-prompt -T search -p "(search up):" { send-keys -X search-backward "%%" }

bind -n F11 resize-pane -Z

### VIM LIKE MOVING 
set-window-option -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind -n M-h if-shell "$is_vim" "send-keys M-h"  "select-pane -L"
bind -n M-j if-shell "$is_vim" "send-keys M-j"  "select-pane -D"
bind -n M-k if-shell "$is_vim" "send-keys M-k"  "select-pane -U"
bind -n M-l if-shell "$is_vim" "send-keys M-l"  "select-pane -R"
# bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# RESIZING PANE
bind -n M-y if-shell "$is_vim" "send-keys M-y" "resize-pane -L 5"
bind -n M-u if-shell "$is_vim" "send-keys M-u" "resize-pane -D 5"
bind -n M-i if-shell "$is_vim" "send-keys M-i" "resize-pane -U 5"
bind -n M-o if-shell "$is_vim" "send-keys M-o" "resize-pane -R 5"

# MOVE PANE (i3-like)
bind-key -n M-n if-shell "$is_vim" "send-keys M-n" 'if-shell -F "#{pane_at_left}" "" "select-pane -L \; swap-pane -s ! -d"'
bind-key -n M-m if-shell "$is_vim" "send-keys M-m" 'if-shell -F "#{pane_at_bottom}" "" "select-pane -D \; swap-pane -s ! -d"'
bind-key -n M-, if-shell "$is_vim" "send-keys M-," 'if-shell -F "#{pane_at_top}" "" "select-pane -U \; swap-pane -s ! -d"'
bind-key -n M-. if-shell "$is_vim" "send-keys M-." 'if-shell -F "#{pane_at_right}" "" "select-pane -R \; swap-pane -s ! -d"'

# bind -n M-H resize-pane -L
# bind -n M-J resize-pane -D
# bind -n M-K resize-pane -U
# bind -n M-L resize-pane -R

# fucking apple (apple don't have an alt key)
# bind -n Ó resize-pane -L 7
# bind -n ķ resize-pane -L
# bind -n Ô resize-pane -D 7
# bind -n ∆ resize-pane -D
# bind -n ū resize-pane -U 7
# bind -n Ż resize-pane -U
# bind -n Ł resize-pane -R 7
# bind -n ł resize-pane -R

# SPLIT PANES USING | AND -
bind | split-window -h -c '#{pane_current_path}'
bind \\ split-window -h -c '#{pane_current_path}'

bind - split-window -v -c '#{pane_current_path}'
bind _ split-window -v -c '#{pane_current_path}'

bind c new-window -c '#{pane_current_path}'

# CHAGE LAYOUT 
bind L next-layout

# RELOAD CONFIG FILE 
bind r "source-file ~/.config/tmux/tmux.conf; display-message 'sourced: ~/.config/tmux/tmux.conf'"

# SYNCHRONIZE PANES
bind a set-window-option synchronize-panes
# ; display-message "synchronize-panes is now #{?pane_synchronized,on,off}

# MOVING WINDOW
bind -n M-S-Left  swap-window -t -1
bind -n M-S-Right swap-window -t +1
bind -n M-Left  prev
bind -n M-Right next


# CHANGING WINDOW
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9
bind -n M-0 select-window -t 0
# funcking apple
bind -n Ń select-window -t 1
bind -n ™ select-window -t 2
bind -n € select-window -t 3
bind -n ß select-window -t 4
bind -n į select-window -t 5
bind -n § select-window -t 6
bind -n ¶ select-window -t 7
bind -n • select-window -t 8
bind -n Ľ select-window -t 9
bind -n ľ select-window -t 0

# Changing or creating new session with fzf
# same bindkey is set in zsh
bind -n C-G  split-window -v ~/bin/tmux-sessionizer

# Changing into existing session with fzf
bind C-j new-window -n "session-switcher" "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# SCROOLING
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n Pageup if-shell "$is_vim" "send-keys Pageup" "copy-mode -u"
bind -n Pagedown send-keys Pagedown

# SETTINGS
############

# Enable mouse mode (tmux 2.1 and above)
set -g mouse on
setw -g alternate-screen on

# don't rename windows automatically
set-option -g allow-rename off

# copy to system clipboard [y]
bind -n -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'xclip -i -sel p -f | xclip -i -sel c'
bind -n -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'xclip -i -sel p -f | xclip -i -sel c'

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1
set -g display-panes-time 900

# loud or quiet?
set-option -g bell-action none
set-option -g visual-bell off
set-option -g visual-activity off
set-option -g visual-silence off
set-window-option -g monitor-activity off


# COLORSCHEME: gruvbox dark
#################################
set-option -g status "on"

# #set inactive/active window styles
# set -g window-style fg=colour247,bg=colour234
# set -g window-active-style fg=colour250,bg=colour232
#
set -g window-style fg=colour247
set -g window-active-style fg=colour250

# default statusbar colors
set-option -g status-style bg=colour237,fg=colour223

# default window title colors
set-window-option -g window-status-style bg=colour214,fg=colour237

set-window-option -g window-status-activity-style bg=colour237,fg=colour248

# active window title colors
set-window-option -g window-status-current-style bg=colour214,fg=colour237 #bg1

# pane border
set-option -g pane-active-border-style fg=colour250 #fg2
set-option -g pane-border-style fg=colour237 #bg1

# message infos
set-option -g message-style bg=colour239 #bg2
set-option -g message-style fg=colour223 #fg1

# writting commands inactive
set-option -g message-command-style bg=colour239 #fg3
set-option -g message-command-style fg=colour223 #bg1

# pane number display
set-option -g display-panes-active-colour colour250 #fg2
set-option -g display-panes-colour colour237 #bg1

# clock
set-window-option -g clock-mode-colour colour109 #blue

# bell
set-window-option -g window-status-bell-style fg=colour235,bg=colour167 #bg, red


# Theme Layout
##################
set-option -g status-style "none"
set-option -g status-justify "left"
set-option -g status-left-style "none"
set-option -g status-left-length "80"
set-option -g status-right-style "none"
set-option -g status-right-length "80"
set-window-option -g window-status-activity-style "none"
set-window-option -g window-status-style "none"
set-window-option -g window-status-separator ""
set-window-option -g aggressive-resize on

set-window-option -g window-status-current-format " \
#I°\
#[fg=colour124]\
#{?pane_synchronized,⇄ ,}\
#{?window_zoomed_flag,★ ,}\
#[fg=colour237]\
#W \
#[fg=colour124]\
#{?pane_synchronized,⇄ ,}\
#{?window_zoomed_flag,★ ,}\
#[bg=colour237] "

set-window-option -g window-status-format "#[fg=colour237, bg=colour248] \
#I°#W #[bg=colour237] "

set-option -g status-left "#[fg=colour246,bg=colour239] \
⏱ %H:%M⏱ \
#[fg=colour241, bg=colour237] "

set-option -g status-right "#[fg=colour246, bg=colour239]\
#[fg=colour120,bg=colour59]\
 ↯ #S ↯ \
#[fg=colour237, bg=colour248]\
 ✰ #h ✰ "

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.local/share/tmux/plugins/tpm/tpm'
