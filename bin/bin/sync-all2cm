#!/usr/bin/env bash

Black="\033[0;30m"
Red="\033[0;31m"
Green="\033[0;32m"
Orange="\033[0;33m"
Blue="\033[0;34m"
Purple="\033[0;35m"
Cyan="\033[0;36m"
LightGray="\033[0;37m"
DarkGray="\033[1;30m"
LightRed="\033[1;31m"
LightGreen="\033[1;32m"
Yellow="\033[1;33m"
LightBlue="\033[1;34m"
LightPurple="\033[1;35m"
LightCyan="\033[1;36m"
White="\033[1;37m"
NC="\033[0m"

# Keep slash at the end of the source to include only it's content.
# Other way folder itself will be copied to destination
# Standard rsync thing
rsync_src_desc() {
	# local DEBUG="--dry-run"
	local DEBUG=""

	local src=$1
	local desc=$2

	# split by ':'
	IFS=':' read -r -a src_arr <<< "$src"
	local src_host=${src_arr[0]}
	local src_path=${src_arr[1]}


	local src_ok=false
	local desc_ok=false



	if test -d "$src" && test -x "$src"; then
		src_ok=true

	elif [[ `ssh $src_host test -d $src_path && echo exists` ]]; then
		src_ok=true
	else
		src_ok=false
		echo -e "${Orange}$src ${Red}is not accessible.${NC}"
	fi

	if test -d "$desc" && test -x "$desc"; then
		desc_ok=true
	else
		desc_ok=false
		echo -e "${Orange}$desc ${Red}is not accessible.${NC}"
	fi

	if test "$src_ok" = true && test "$desc_ok" = true; then
		echo -e "\n${Purple}$desc${NC} <- ${Blue}$src${NC}"
		rsync $DEBUG -vazr --progress "$src" "$desc"
	else
		echo -e "${NC}Fuck off.${NC}"
	fi
}

# Ixi
rsync_src_desc "ixi:storage/dcim/Camera/" "/mnt/Storage-2/Camera"
rsync_src_desc "ixi:storage/pictures/dontBackup/" "/mnt/Storage-2/Camera"
rsync_src_desc "ixi:storage/shared/Android/media/com.whatsapp/WhatsApp/" "/mnt/Storage-2/Whatsapp"
rsync_src_desc "ixi:storage/music/URecorder/" "/mnt/Storage-2/URecorder"

# Insta360
rsync_src_desc "/run/media/undg/disk/DCIM/Camera01/" "/mnt/Storage-2/Insta360/RAW"

# Backup of backup
rsync_src_desc "/mnt/Storage-1/backups/" "/mnt/Storage-2/backups"
rsync_src_desc "/mnt/Storage-2/backups/" "/mnt/Storage-1/backups"

rsync_src_desc "/mnt/Storage-1/backups/" "/mnt/Storage-2/backups" # looks strange, but it have a sense if you'll think about it.
